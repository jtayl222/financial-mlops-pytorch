apiVersion: mlops.seldon.io/v1alpha1
kind: Model
metadata:
  name: contextual-financial-router
  namespace: financial-ml
  annotations:
    seldon.io/model-type: "router"
    seldon.io/description: "Contextual router for market condition-based model selection"
spec:
  storageUri: "gs://financial-ml-models/contextual-router/v1.0.0"
  requirements:
    - "torch>=1.9.0"
    - "numpy>=1.21.0"
    - "pandas>=1.3.0"
    - "scikit-learn>=1.0.0"
    - "redis>=4.0.0"
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  replicas:
    min: 2
    max: 4
  ingress:
    httpPort: 9000
    grpcPort: 9001
  protocol: v2
  env:
    - name: ROUTING_STRATEGY
      value: "contextual"
    - name: VOLATILITY_THRESHOLD
      value: "0.30"
    - name: TREND_THRESHOLD
      value: "0.02"
    - name: REDIS_URL
      value: "redis://redis-service:6379"
    - name: MARKET_DATA_CACHE_TTL
      value: "300"  # 5 minutes
  children:
    - name: robust-predictor
      implementation: robust-financial-model
    - name: aggressive-predictor
      implementation: aggressive-financial-model
    - name: conservative-predictor
      implementation: conservative-financial-model
    - name: baseline-predictor
      implementation: baseline-financial-model
---
apiVersion: mlops.seldon.io/v1alpha1
kind: Model
metadata:
  name: robust-financial-model
  namespace: financial-ml
  annotations:
    seldon.io/model-type: "predictor"
    seldon.io/description: "Robust model optimized for high volatility markets"
spec:
  storageUri: "gs://financial-ml-models/robust/v1.0.0"
  requirements:
    - "torch>=1.9.0"
    - "numpy>=1.21.0"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  replicas:
    min: 1
    max: 3
  ingress:
    httpPort: 9000
    grpcPort: 9001
  protocol: v2
  annotations:
    seldon.io/model-variant: "robust"
    seldon.io/target-market: "high-volatility"
---
apiVersion: mlops.seldon.io/v1alpha1
kind: Model
metadata:
  name: aggressive-financial-model
  namespace: financial-ml
  annotations:
    seldon.io/model-type: "predictor"
    seldon.io/description: "Aggressive model optimized for bull markets"
spec:
  storageUri: "gs://financial-ml-models/aggressive/v1.0.0"
  requirements:
    - "torch>=1.9.0"
    - "numpy>=1.21.0"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  replicas:
    min: 1
    max: 3
  ingress:
    httpPort: 9000
    grpcPort: 9001
  protocol: v2
  annotations:
    seldon.io/model-variant: "aggressive"
    seldon.io/target-market: "bull-market"
---
apiVersion: mlops.seldon.io/v1alpha1
kind: Model
metadata:
  name: conservative-financial-model
  namespace: financial-ml
  annotations:
    seldon.io/model-type: "predictor"
    seldon.io/description: "Conservative model optimized for bear markets"
spec:
  storageUri: "gs://financial-ml-models/conservative/v1.0.0"
  requirements:
    - "torch>=1.9.0"
    - "numpy>=1.21.0"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  replicas:
    min: 1
    max: 3
  ingress:
    httpPort: 9000
    grpcPort: 9001
  protocol: v2
  annotations:
    seldon.io/model-variant: "conservative"
    seldon.io/target-market: "bear-market"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contextual-router-config
  namespace: financial-ml
data:
  routing_config.yaml: |
    routing_strategy: contextual
    market_conditions:
      high_volatility:
        threshold: 0.30
        target_model: robust-predictor
        description: "High volatility market conditions"
      bull_market:
        threshold: 0.02
        target_model: aggressive-predictor
        description: "Bull market conditions"
      bear_market:
        threshold: -0.02
        target_model: conservative-predictor
        description: "Bear market conditions"
      sideways:
        target_model: baseline-predictor
        description: "Sideways market conditions"
    
    feature_mapping:
      volatility_features:
        - "volatility"
        - "price_volatility"
        - "realized_volatility"
      trend_features:
        - "sma_5"
        - "sma_20"
        - "price_momentum"
      
    routing_rules:
      - condition: "volatility > 0.30"
        action: "route_to_robust"
        priority: 1
      - condition: "trend > 0.02"
        action: "route_to_aggressive"
        priority: 2
      - condition: "trend < -0.02"
        action: "route_to_conservative"
        priority: 3
      - condition: "default"
        action: "route_to_baseline"
        priority: 4
    
    monitoring:
      enabled: true
      metrics:
        - routing_decisions
        - market_condition_distribution
        - model_performance_by_condition
      alerts:
        - name: "high_volatility_spike"
          condition: "volatility > 0.50"
          action: "alert_ops_team"
        - name: "routing_imbalance"
          condition: "single_model_traffic > 0.80"
          action: "rebalance_traffic"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: financial-ml
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: financial-ml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          emptyDir: {}